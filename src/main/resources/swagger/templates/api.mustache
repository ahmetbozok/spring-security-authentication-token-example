package {{package}};

{{#imports}}import {{import}};
{{/imports}}

import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;

import javax.servlet.http.HttpSession;

import java.util.List;
{{#async}}
import java.util.concurrent.{{^jdk8}}Callable{{/jdk8}}{{#jdk8}}CompletableFuture{{/jdk8}};
{{/async}}

{{>generatedAnnotation}}
{{#operations}}
public {{^jdk8}}abstract class{{/jdk8}}{{#jdk8}}interface{{/jdk8}} {{classname}} {
{{#operation}}
    @RequestMapping(
        value = "{{{path}}}",{{#singleContentTypes}}
        produces = "{{{vendorExtensions.x-accepts}}}",
        consumes = "{{{vendorExtensions.x-contentType}}}",{{/singleContentTypes}}{{^singleContentTypes}}{{#hasProduces}}
        produces = { {{#produces}}"{{{mediaType}}}"{{#hasMore}}, {{/hasMore}}{{/produces}} }, {{/hasProduces}}{{#hasConsumes}}
        consumes = { {{#consumes}}"{{{mediaType}}}"{{#hasMore}}, {{/hasMore}}{{/consumes}} },{{/hasConsumes}}{{/singleContentTypes}}
        method = RequestMethod.{{httpMethod}})
    {{^jdk8}}public{{/jdk8}}{{#jdk8}}default{{/jdk8}} {{#responseWrapper}}{{.}}<{{/responseWrapper}}{{>returnTypes}}{{#responseWrapper}}>{{/responseWrapper}} {{operationId}}Handler({{#allParams}}{{>queryParams}}{{>pathParams}}{{>headerParams}}{{>bodyParams}}{{>formParams}}{{#hasMore}},
        {{/hasMore}}, {{/allParams}}final HttpSession httpSession) {
        return {{#async}}CompletableFuture.completedFuture({{/async}}this.{{operationId}}({{#allParams}}{{paramName}}{{#hasMore}},{{/hasMore}},{{/allParams}} httpSession){{#async}}){{/async}};
    }

    {{^jdk8}}public abstract {{/jdk8}}{{#responseWrapper}}{{.}}<{{/responseWrapper}}{{>returnTypes}}{{#responseWrapper}}>{{/responseWrapper}} {{operationId}}({{#allParams}}{{{dataType}}} {{paramName}}{{#hasMore}},
    {{/hasMore}}, {{/allParams}}final HttpSession httpSession);

{{/operation}}
}
{{/operations}}
